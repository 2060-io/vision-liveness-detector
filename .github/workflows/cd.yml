name: Continuous Deployment

on:
  push:
    branches:
      - main
      - 'release/**'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Release Please
        id: release-please
        uses: googleapis/release-please-action@v4
        with:
          release-type: python
          token: ${{ secrets.GITHUB_TOKEN }}
          manifest-file: .release-please-manifest.json
          config-file: release-please-config.json

  build:
    needs: release
    if: needs.release.outputs.release_created == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0  
          fetch-tags: true

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine auditwheel

      - name: Extract Version from Release or Git Tags
        run: |
          if [[ "${{ needs.release.outputs.release_created }}" == "true" ]]; then
            echo "RELEASE_VERSION=${{ needs.release.outputs.tag_name }}" >> $GITHUB_ENV
          else
            LAST_TAG=$(git tag --sort=-v:refname | head -n 1)
            echo "RELEASE_VERSION=$LAST_TAG" >> $GITHUB_ENV
          fi

      - name: Display Release Version
        run: echo "Building version $RELEASE_VERSION"

      - name: Build
        run: ./build.sh

      - name: Upload Built Python Package
        uses: actions/upload-artifact@v4
        with:
          name: python_package
          path: wrappers/python/dist

  publish-py:
    needs: [build]
    if: needs.release.outputs.release_created == 'true'
    permissions:
      id-token: write
      
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/liveness-detector
    
    steps:
      - name: Fetch Python package
        uses: actions/download-artifact@v4
        with:
         path: wrappers/python/dist
         pattern: "python_package*"
         merge-multiple: true
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wrappers/python/dist
